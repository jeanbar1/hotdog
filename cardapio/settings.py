"""
Django settings for cardapio project.

Generated by 'django-admin startproject' using Django 5.1.6.
"""

import os
from pathlib import Path
import dj_database_url
from decouple import config

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

# ==================== SEGURANÇA/CONFIGURAÇÕES BÁSICAS ====================

# Configurações sensíveis via variáveis de ambiente (usando python-decouple)
SECRET_KEY = config('SECRET_KEY', default='chave-local-de-dev')  # No Render, use uma chave forte
DEBUG = config('DEBUG', default=False, cast=bool)  # False em produção!

# Configuração de hosts para Render
ALLOWED_HOSTS = ['*']  # Em produção, especifique seus domínios
RENDER_EXTERNAL_HOSTNAME = os.environ.get('RENDER_EXTERNAL_HOSTNAME')
if RENDER_EXTERNAL_HOSTNAME:
    ALLOWED_HOSTS.append(RENDER_EXTERNAL_HOSTNAME)

# Origins confiáveis para CSRF
CSRF_TRUSTED_ORIGINS = [
    "https://*.ngrok-free.app",
    "https://*.onrender.com",
    "http://localhost:8000"  # Para desenvolvimento
]

# ==================== CONFIGURAÇÕES DE APLICAÇÃO ====================

INSTALLED_APPS = [
    # Apps Django padrão
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    
    # Seus apps
    'produto',
    'pedido',
    'usuario',
    'carrinho',
    'principal',
    
    # Para produção
    'whitenoise.runserver_nostatic',  # Servir arquivos estáticos
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'whitenoise.middleware.WhiteNoiseMiddleware',  # Deve vir logo após SecurityMiddleware
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'cardapio.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR / 'templates'],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'cardapio.wsgi.application'

# ==================== BANCO DE DADOS ====================

# Configuração flexível para desenvolvimento e produção
DATABASES = {
    'default': dj_database_url.config(
        default='postgresql://cardapio_fh15_user:3m4kBBAeTmHuToSH5IfIiFtSg5v1vU7d@dpg-d0cet68dl3ps73a76r6g-a.oregon-postgres.render.com/cardapio_fh15',
        conn_max_age=600
    )
}
# ==================== VALIDAÇÃO DE SENHAS ====================

AUTH_PASSWORD_VALIDATORS = [
    {'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator'},
    {'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator'},
    {'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator'},
    {'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator'},
]

# ==================== INTERNACIONALIZAÇÃO ====================

LANGUAGE_CODE = 'pt-br'
TIME_ZONE = 'America/Sao_Paulo'
USE_I18N = True
USE_TZ = True

# ==================== ARQUIVOS ESTÁTICOS/MÍDIA ====================

# Configurações para produção
STATIC_URL = '/static/'
STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')  # Onde collectstatic irá coletar
STATICFILES_DIRS = [os.path.join(BASE_DIR, 'static')]  # Onde seus arquivos estáticos estão
STATICFILES_STORAGE = 'whitenoise.storage.CompressedManifestStaticFilesStorage'  # Otimização

# Configurações de mídia (upload de arquivos)
MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')

# ==================== CONFIGURAÇÕES PERSONALIZADAS ====================

# Autenticação
AUTH_USER_MODEL = 'usuario.Usuario'
LOGIN_REDIRECT_URL = '/'
LOGOUT_REDIRECT_URL = '/usuario/user_login/'

# E-mail (melhor usar variáveis de ambiente para credenciais)
EMAIL_HOST = config('EMAIL_HOST', default='smtp.gmail.com')
EMAIL_HOST_USER = config('EMAIL_HOST_USER', default='')
EMAIL_HOST_PASSWORD = config('EMAIL_HOST_PASSWORD', default='')
EMAIL_PORT = config('EMAIL_PORT', default=587, cast=int)
EMAIL_USE_TLS = config('EMAIL_USE_TLS', default=True, cast=bool)
EMAIL_BACKEND = config('EMAIL_BACKEND', default='django.core.mail.backends.smtp.EmailBackend')
DEFAULT_FROM_EMAIL = config('DEFAULT_FROM_EMAIL', default='jeanb.santos404@gmail.com')
EMAIL_SENDER_NAME = config('EMAIL_SENDER_NAME', default='Hotdog')

# Páginas de erro
ERROR_404_TEMPLATE_NAME = "404.html"
ERROR_403_TEMPLATE_NAME = "403.html"
ERROR_400_TEMPLATE_NAME = "400.html"
ERROR_500_TEMPLATE_NAME = "500.html"

# ==================== CONFIGURAÇÕES PARA PRODUÇÃO ====================

if not DEBUG:
    # Segurança adicional para produção
    SESSION_COOKIE_SECURE = True
    CSRF_COOKIE_SECURE = True
    SECURE_SSL_REDIRECT = True
    SECURE_HSTS_SECONDS = 31536000  # 1 year
    SECURE_HSTS_INCLUDE_SUBDOMAINS = True
    SECURE_HSTS_PRELOAD = True
    SECURE_PROXY_SSL_HEADER = ('HTTP_X_FORWARDED_PROTO', 'https')
    
    # Otimização do Whitenoise
    WHITENOISE_MANIFEST_STRICT = False
    WHITENOISE_USE_FINDERS = True